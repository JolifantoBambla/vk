# This is a basic workflow to help you get started with Actions

name: Test

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
    paths:
      - 'vk.asd'
      - 'src/**'
      - 'test/**'
  schedule:
    - cron: '0 0 1 * *'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  test:
    name: ${{ matrix.lisp }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # allegro: roswell installs 32bit version
        # clisp: can't be installed via roswell
        # cmucl: can't load cffi (which is strange because that wasn't a problem before)
        lisp: [abcl, ccl, cmu-bin, ecl, sbcl-bin]
        os: [ubuntu-20.04]
      fail-fast: false

    steps:
      - uses: actions/checkout@v2

      - name: Install Vulkan (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          ### Install Vulkan SDK
          # Add lunarg apt sources
          wget -qO - https://packages.lunarg.com/lunarg-signing-key-pub.asc | sudo apt-key add -
          sudo wget -qO /etc/apt/sources.list.d/lunarg-vulkan-focal.list https://packages.lunarg.com/vulkan/lunarg-vulkan-focal.list
          
          # Update package lists
          sudo apt-get update -qq
          
          # Install dependencies
          sudo apt-get install -y \
            vulkan-sdk

      - name: Install Roswell
        env:
          LISP: ${{ matrix.lisp }}
        run: curl -L https://raw.githubusercontent.com/roswell/roswell/v20.06.14.107/scripts/install-for-ci.sh | sh

      - name: Install Rove
        run: ros install rove

      - name: Setup CMUCL
        if: matrix.lisp == 'cmu-bin'
        run: |
          ln -s $GITHUB_WORKSPACE/vk ~/.roswell/lisp/quicklisp/local-projects/vk
          ros -e "(ql:register-local-projects)"
          ros -e "(ql:quickload :cffi)"

      - name: Run tests
        run: |
          PATH="~/.roswell/bin:$PATH"
          rove vk.asd
  
  test-windows:
    name: ${{ matrix.lisp }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # Roswell can only install SBCL on windows, it seems
        lisp: [sbcl-bin]
        os: [windows-latest]
      fail-fast: false

    steps:
      - uses: actions/checkout@v2

      - name: Install Vulkan
        working-directory: ${{ runner.workspace }}/${{ github.event.repository.name }}
        shell: pwsh
        # Some projects don't allow in-source building, so create a separate build directory
        # We'll use this as our working directory for all subsequent commands
        run: |
          # the download URL for the latest SDK version changes sometimes (every four months or so?)...
          curl -LS -o vulkan-sdk.exe https://sdk.lunarg.com/sdk/download/latest/windows/vulkan-sdk.exe
          
          .\vulkan-sdk.exe --accept-licenses --default-answer --confirm-command install

      - name: Install Roswell
        env:
          LISP: ${{ matrix.lisp }}
          ROSWELL_INSTALL_DIR: /c/roswell
        shell: bash
        run: |
          PATH="/c/roswell/bin:$PATH"
          curl -L https://raw.githubusercontent.com/fukamachi/roswell/windows-source-registry-settings/scripts/install-for-ci.sh | sh
          
      - name: Install Rove
        shell: bash
        run: /c/roswell/bin/ros install rove

      - name: Run tests
        shell: bash
        run: |
          # Add Roswel to path
          PATH="~/.roswell/bin:/c/roswell/bin:$PATH"
          
          # Run tests
          rove vk.asd
